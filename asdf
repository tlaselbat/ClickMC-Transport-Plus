plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}
loom {
	accessWidenerPath = file("src/main/resources/travelsystemrevamp.accesswidener")
}

base {
	archivesName = project.archives_base_name + "-" + project.minecraft_version
	version = project.mod_version
	group = project.maven_group}

repositories {

	// Parchment
	maven { url "https://maven.parchmentmc.org" }

	// Cloth Config
	maven { url "https://maven.shedaniel.me/" }

	// Mod Menu
	maven { url "https://maven.terraformersmc.com/" }

	// Mixin Extras
	maven { url 'https://jitpack.io' }
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${parchment_version}@zip")
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	}

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
//	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.

	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
	{
		exclude(module: "fabric-api-deprecated")
	}

	// Cloth Config
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")
	{
		exclude(group: 'net.fabricmc.fabric-api')
	}

	// Mod Menu
	modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}")

	// Mixin Extras
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${project.mixinextras_version}")))

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesName}" }
	}
}


// configure the maven publication

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}